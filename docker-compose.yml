services:
  fullstack:
    env_file:
      - .env
    volumes:
      - ./fullstack/prisma:/app/prisma
      - ./sqlite-db:/sqlite-db
    command: >
      sh -c "if [ \"$$DOCKER_ENV\" = \"true\" ]; then
        while ! nc -z postgres 5432; do
          sleep 1;
          echo 'Waiting for PostgreSQL...';
        done;
      fi;
      pnpm start"

  postgres:
    image: postgres:16.3-alpine
    container_name: full_db_postgres
    volumes:
      - database_volume:/var/lib/postgresql/data
    env_file:
      - .env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER"]
      interval: 5s
      timeout: 3s
      retries: 10
      start_period: 10s

  pgloader:
    image: dimitri/pgloader
    container_name: full_pgloader
    depends_on:
      postgres:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./sqlite-db:/sqlite-db
    command: >
      sh -c 'if [ -f "/sqlite-db/database.sqlite" ]; then
        echo "Starting migration from SQLite to PostgreSQL...";
        pgloader $${SOURCE_DB} $${TARGET_DB}
               --with "prefetch rows = 500"
               --with "batch size = 500mb"
               --with "workers = 4";
        echo "Migration completed successfully!";
      else
        echo "SQLite database not found, skipping migration";
      fi'
    restart: on-failure

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx_config/nginx.conf:/etc/nginx/nginx.conf
      - ./log/nginx:/var/log/nginx
    environment:
      TZ: "Europe/Moscow"
    depends_on:
      fullstack:
        condition: service_healthy

volumes:
  database_volume:
